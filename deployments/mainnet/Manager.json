{
  "address": "0xec5CdD1a415bE0b1d513cc420e4fC80CA3ca7590",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_yaxis",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "AllowedController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_converter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "AllowedConverter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "AllowedStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "AllowedVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Halted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "SetController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "SetPendingStrategist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "SetStrategist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "VaultAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "VaultRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_TOKENS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PENDING_STRATEGIST_TIMELOCK",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptStrategist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "addVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedControllers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedConverters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedStrategies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedVaults",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "controllers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHarvestFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvester",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "insuranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "insurancePool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "insurancePoolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingStrategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "recoverToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "removeVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setAllowedController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_converter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setAllowedConverter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setAllowedStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setAllowedVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setHalted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_harvester",
          "type": "address"
        }
      ],
      "name": "setHarvester",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_insuranceFee",
          "type": "uint256"
        }
      ],
      "name": "setInsuranceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_insurancePool",
          "type": "address"
        }
      ],
      "name": "setInsurancePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_insurancePoolFee",
          "type": "uint256"
        }
      ],
      "name": "setInsurancePoolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingPool",
          "type": "address"
        }
      ],
      "name": "setStakingPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stakingPoolShareFee",
          "type": "uint256"
        }
      ],
      "name": "setStakingPoolShareFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "setStrategist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_treasuryFee",
          "type": "uint256"
        }
      ],
      "name": "setTreasuryFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalProtectionFee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawalProtectionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolShareFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalProtectionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yaxis",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3234653bf4316a743a4ffa7e8a57daa1c82fb8dcc02ed6f35d514ded2d448cc7",
  "receipt": {
    "to": null,
    "from": "0x633Db21C73594FBB1cD0DC8829682874f35aD8EF",
    "contractAddress": "0xec5CdD1a415bE0b1d513cc420e4fC80CA3ca7590",
    "transactionIndex": 46,
    "gasUsed": "2283210",
    "logsBloom": "0x
    "blockHash": "0xf27e5e1c2e1337dbaa0b5d6dec65b63ed5c0656a003eda24b97f4a55da8396f3",
    "transactionHash": "0x3234653bf4316a743a4ffa7e8a57daa1c82fb8dcc02ed6f35d514ded2d448cc7",
    "logs": [],
    "blockNumber": 14781266,
    "cumulativeGasUsed": "5851797",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x34769D3e122C93547836AdDD3eb298035D68F1C3"
  ],
  "numDeployments": 1,
  "solcInputHash": "2f52fc9e2c9436dbe54a500dcc1ea2eb",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_yaxis\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"AllowedController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_converter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"AllowedConverter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"AllowedStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"AllowedVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Halted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"SetController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"SetGovernance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_strategist\",\"type\":\"address\"}],\"name\":\"SetPendingStrategist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_strategist\",\"type\":\"address\"}],\"name\":\"SetStrategist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"VaultAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"VaultRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PENDING_STRATEGIST_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptStrategist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"addVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedControllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedConverters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedStrategies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedVaults\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHarvestFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvester\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insuranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insurancePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insurancePoolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingStrategist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"recoverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"removeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setAllowedController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_converter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setAllowedConverter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setAllowedStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setAllowedVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setHalted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_harvester\",\"type\":\"address\"}],\"name\":\"setHarvester\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_insuranceFee\",\"type\":\"uint256\"}],\"name\":\"setInsuranceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_insurancePool\",\"type\":\"address\"}],\"name\":\"setInsurancePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_insurancePoolFee\",\"type\":\"uint256\"}],\"name\":\"setInsurancePoolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingPool\",\"type\":\"address\"}],\"name\":\"setStakingPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakingPoolShareFee\",\"type\":\"uint256\"}],\"name\":\"setStakingPoolShareFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategist\",\"type\":\"address\"}],\"name\":\"setStrategist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_treasuryFee\",\"type\":\"uint256\"}],\"name\":\"setTreasuryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawalProtectionFee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalProtectionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolShareFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalProtectionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yaxis\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptStrategist()\":{\"details\":\"This can only be called after the pending strategist timelock (7 days)\"},\"addVault(address)\":{\"params\":{\"_vault\":\"The address of the vault\"}},\"constructor\":{\"params\":{\"_yaxis\":\"The address of the YAX token\"}},\"getToken(address)\":{\"params\":{\"_vault\":\"The address of the vault\"}},\"recoverToken(address,uint256,address)\":{\"details\":\"This contract should never hold tokens\",\"params\":{\"_amount\":\"The amount to withdraw\",\"_to\":\"The address to send to\",\"_token\":\"The address of the token\"}},\"removeVault(address)\":{\"params\":{\"_vault\":\"The address of the vault\"}},\"setAllowedController(address,bool)\":{\"params\":{\"_allowed\":\"The status of if it is allowed\",\"_controller\":\"The address of the controller\"}},\"setAllowedConverter(address,bool)\":{\"params\":{\"_allowed\":\"The status of if it is allowed\",\"_converter\":\"The address of the converter\"}},\"setAllowedStrategy(address,bool)\":{\"params\":{\"_allowed\":\"The status of if it is allowed\",\"_strategy\":\"The address of the strategy\"}},\"setAllowedVault(address,bool)\":{\"params\":{\"_allowed\":\"The status of if it is allowed\",\"_vault\":\"The address of the vault\"}},\"setController(address,address)\":{\"params\":{\"_controller\":\"The address of the controller\",\"_vault\":\"The address of the vault\"}},\"setGovernance(address)\":{\"params\":{\"_governance\":\"The address of the governance\"}},\"setHalted()\":{\"details\":\"Withdraws will still work, allowing users to exit the protocol\"},\"setHarvester(address)\":{\"params\":{\"_harvester\":\"The address of the harvester\"}},\"setInsuranceFee(uint256)\":{\"details\":\"Throws if setting fee over 1%\",\"params\":{\"_insuranceFee\":\"The value for the insurance fee\"}},\"setInsurancePool(address)\":{\"params\":{\"_insurancePool\":\"The address of the insurance pool\"}},\"setInsurancePoolFee(uint256)\":{\"details\":\"Throws if setting fee over 20%\",\"params\":{\"_insurancePoolFee\":\"The value for the insurance pool fee\"}},\"setStakingPool(address)\":{\"params\":{\"_stakingPool\":\"The address of the staking pool\"}},\"setStakingPoolShareFee(uint256)\":{\"details\":\"Throws if setting fee over 50%\",\"params\":{\"_stakingPoolShareFee\":\"The value for the staking pool fee\"}},\"setStrategist(address)\":{\"params\":{\"_strategist\":\"The address of the strategist\"}},\"setTreasury(address)\":{\"params\":{\"_treasury\":\"The address of the treasury\"}},\"setTreasuryFee(uint256)\":{\"details\":\"Throws if setting fee over 20%\",\"params\":{\"_treasuryFee\":\"The value for the treasury fee\"}},\"setWithdrawalProtectionFee(uint256)\":{\"details\":\"Throws if setting fee over 1%\",\"params\":{\"_withdrawalProtectionFee\":\"The value for the withdrawal protection fee\"}}},\"title\":\"Manager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptStrategist()\":{\"notice\":\"Updates the strategist to the pending strategist\"},\"addVault(address)\":{\"notice\":\"Adds a token to be able to be deposited for a given vault\"},\"getHarvestFeeInfo()\":{\"notice\":\"Returns a tuple of:     YAXIS token address,     Treasury address,     Treasury fee\"},\"getToken(address)\":{\"notice\":\"Returns an array of token addresses for a given vault\"},\"recoverToken(address,uint256,address)\":{\"notice\":\"Allows the strategist to pull tokens out of this contract\"},\"removeVault(address)\":{\"notice\":\"Removes a token from being able to be deposited for a given vault\"},\"setAllowedController(address,bool)\":{\"notice\":\"Sets the permission for the given controller\"},\"setAllowedConverter(address,bool)\":{\"notice\":\"Sets the permission for the given converter\"},\"setAllowedStrategy(address,bool)\":{\"notice\":\"Sets the permission for the given strategy\"},\"setAllowedVault(address,bool)\":{\"notice\":\"Sets the permission for the given vault\"},\"setController(address,address)\":{\"notice\":\"Sets the vault address for a controller\"},\"setGovernance(address)\":{\"notice\":\"Sets the governance address\"},\"setHalted()\":{\"notice\":\"Sets the protocol as halted, disallowing all deposits forever\"},\"setHarvester(address)\":{\"notice\":\"Sets the harvester address\"},\"setInsuranceFee(uint256)\":{\"notice\":\"Sets the insurance fee\"},\"setInsurancePool(address)\":{\"notice\":\"Sets the insurance pool address\"},\"setInsurancePoolFee(uint256)\":{\"notice\":\"Sets the insurance pool fee\"},\"setStakingPool(address)\":{\"notice\":\"Sets the staking pool address\"},\"setStakingPoolShareFee(uint256)\":{\"notice\":\"Sets the staking pool share fee\"},\"setStrategist(address)\":{\"notice\":\"Sets the pending strategist and the timestamp\"},\"setTreasury(address)\":{\"notice\":\"Sets the treasury address\"},\"setTreasuryFee(uint256)\":{\"notice\":\"Sets the treasury fee\"},\"setWithdrawalProtectionFee(uint256)\":{\"notice\":\"Sets the withdrawal protection fee\"}},\"notice\":\"This contract serves as the central point for governance-voted variables. Fees and permissioned addresses are stored and referenced in this contract only.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v3/Manager.sol\":\"Manager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"contracts/v3/Manager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable max-states-count\\n// solhint-disable var-name-mixedcase\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IController.sol\\\";\\nimport \\\"./interfaces/IConverter.sol\\\";\\nimport \\\"./interfaces/IHarvester.sol\\\";\\nimport \\\"./interfaces/IManager.sol\\\";\\nimport \\\"./interfaces/IStrategy.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\n\\n/**\\n * @title Manager\\n * @notice This contract serves as the central point for governance-voted\\n * variables. Fees and permissioned addresses are stored and referenced in\\n * this contract only.\\n */\\ncontract Manager is IManager {\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    uint256 public constant PENDING_STRATEGIST_TIMELOCK = 7 days;\\n    uint256 public constant MAX_TOKENS = 256;\\n\\n    address public immutable override yaxis;\\n\\n    bool public override halted;\\n\\n    address public override governance;\\n    address public override harvester;\\n    address public override insurancePool;\\n    address public override stakingPool;\\n    address public override strategist;\\n    address public override pendingStrategist;\\n    address public override treasury;\\n\\n    // The following fees are all mutable.\\n    // They are updated by governance (community vote).\\n    uint256 public override insuranceFee;\\n    uint256 public override insurancePoolFee;\\n    uint256 public override stakingPoolShareFee;\\n    uint256 public override treasuryFee;\\n    uint256 public override withdrawalProtectionFee;\\n\\n\\n    uint256 private setPendingStrategistTime;\\n\\n    // Governance must first allow the following properties before\\n    // the strategist can make use of them\\n    mapping(address => bool) public override allowedControllers;\\n    mapping(address => bool) public override allowedConverters;\\n    mapping(address => bool) public override allowedStrategies;\\n    mapping(address => bool) public override allowedVaults;\\n\\n    // vault => controller\\n    mapping(address => address) public override controllers;\\n    // vault => token\\n    mapping(address => address) internal tokens;\\n\\n    event AllowedController(\\n        address indexed _controller,\\n        bool _allowed\\n    );\\n    event AllowedConverter(\\n        address indexed _converter,\\n        bool _allowed\\n    );\\n    event AllowedStrategy(\\n        address indexed _strategy,\\n        bool _allowed\\n    );\\n    event AllowedVault(\\n        address indexed _vault,\\n        bool _allowed\\n    );\\n    event Halted();\\n    event SetController(\\n        address indexed _vault,\\n        address indexed _controller\\n    );\\n    event SetGovernance(\\n        address indexed _governance\\n    );\\n    event SetPendingStrategist(\\n        address indexed _strategist\\n    );\\n    event SetStrategist(\\n        address indexed _strategist\\n    );\\n    event VaultAdded(\\n        address indexed _vault,\\n        address indexed _token\\n    );\\n    event VaultRemoved(\\n        address indexed _vault\\n    );\\n\\n    /**\\n     * @param _yaxis The address of the YAX token\\n     */\\n    constructor(\\n        address _yaxis\\n    )\\n        public\\n    {\\n        require(_yaxis != address(0), \\\"!_yaxis\\\");\\n        yaxis = _yaxis;\\n        governance = msg.sender;\\n        strategist = msg.sender;\\n        harvester = msg.sender;\\n        treasury = msg.sender;\\n        stakingPoolShareFee = 2000;\\n        treasuryFee = 500;\\n        withdrawalProtectionFee = 10;\\n    }\\n\\n    /**\\n     * GOVERNANCE-ONLY FUNCTIONS\\n     */\\n\\n    /**\\n     * @notice Sets the permission for the given controller\\n     * @param _controller The address of the controller\\n     * @param _allowed The status of if it is allowed\\n     */\\n    function setAllowedController(\\n        address _controller,\\n        bool _allowed\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(address(IController(_controller).manager()) == address(this), \\\"!manager\\\");\\n        allowedControllers[_controller] = _allowed;\\n        emit AllowedController(_controller, _allowed);\\n    }\\n\\n    /**\\n     * @notice Sets the permission for the given converter\\n     * @param _converter The address of the converter\\n     * @param _allowed The status of if it is allowed\\n     */\\n    function setAllowedConverter(\\n        address _converter,\\n        bool _allowed\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(address(IConverter(_converter).manager()) == address(this), \\\"!manager\\\");\\n        allowedConverters[_converter] = _allowed;\\n        emit AllowedConverter(_converter, _allowed);\\n    }\\n\\n    /**\\n     * @notice Sets the permission for the given strategy\\n     * @param _strategy The address of the strategy\\n     * @param _allowed The status of if it is allowed\\n     */\\n    function setAllowedStrategy(\\n        address _strategy,\\n        bool _allowed\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(address(IStrategy(_strategy).manager()) == address(this), \\\"!manager\\\");\\n        allowedStrategies[_strategy] = _allowed;\\n        emit AllowedStrategy(_strategy, _allowed);\\n    }\\n\\n    /**\\n     * @notice Sets the permission for the given vault\\n     * @param _vault The address of the vault\\n     * @param _allowed The status of if it is allowed\\n     */\\n    function setAllowedVault(\\n        address _vault,\\n        bool _allowed\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(address(IVault(_vault).manager()) == address(this), \\\"!manager\\\");\\n        allowedVaults[_vault] = _allowed;\\n        emit AllowedVault(_vault, _allowed);\\n    }\\n\\n    /**\\n     * @notice Sets the governance address\\n     * @param _governance The address of the governance\\n     */\\n    function setGovernance(\\n        address _governance\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        governance = _governance;\\n        emit SetGovernance(_governance);\\n    }\\n\\n    /**\\n     * @notice Sets the harvester address\\n     * @param _harvester The address of the harvester\\n     */\\n    function setHarvester(\\n        address _harvester\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(address(IHarvester(_harvester).manager()) == address(this), \\\"!manager\\\");\\n        harvester = _harvester;\\n    }\\n\\n    /**\\n     * @notice Sets the insurance fee\\n     * @dev Throws if setting fee over 1%\\n     * @param _insuranceFee The value for the insurance fee\\n     */\\n    function setInsuranceFee(\\n        uint256 _insuranceFee\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(_insuranceFee <= 100, \\\"_insuranceFee over 1%\\\");\\n        insuranceFee = _insuranceFee;\\n    }\\n\\n    /**\\n     * @notice Sets the insurance pool address\\n     * @param _insurancePool The address of the insurance pool\\n     */\\n    function setInsurancePool(\\n        address _insurancePool\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        insurancePool = _insurancePool;\\n    }\\n\\n    /**\\n     * @notice Sets the insurance pool fee\\n     * @dev Throws if setting fee over 20%\\n     * @param _insurancePoolFee The value for the insurance pool fee\\n     */\\n    function setInsurancePoolFee(\\n        uint256 _insurancePoolFee\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(_insurancePoolFee <= 2000, \\\"_insurancePoolFee over 20%\\\");\\n        insurancePoolFee = _insurancePoolFee;\\n    }\\n\\n    /**\\n     * @notice Sets the staking pool address\\n     * @param _stakingPool The address of the staking pool\\n     */\\n    function setStakingPool(\\n        address _stakingPool\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        stakingPool = _stakingPool;\\n    }\\n\\n    /**\\n     * @notice Sets the staking pool share fee\\n     * @dev Throws if setting fee over 50%\\n     * @param _stakingPoolShareFee The value for the staking pool fee\\n     */\\n    function setStakingPoolShareFee(\\n        uint256 _stakingPoolShareFee\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(_stakingPoolShareFee <= 5000, \\\"_stakingPoolShareFee over 50%\\\");\\n        stakingPoolShareFee = _stakingPoolShareFee;\\n    }\\n\\n    /**\\n     * @notice Sets the pending strategist and the timestamp\\n     * @param _strategist The address of the strategist\\n     */\\n    function setStrategist(\\n        address _strategist\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(_strategist != address(0), \\\"!_strategist\\\");\\n        pendingStrategist = _strategist;\\n        // solhint-disable-next-line not-rely-on-time\\n        setPendingStrategistTime = block.timestamp;\\n        emit SetPendingStrategist(_strategist);\\n    }\\n\\n    /**\\n     * @notice Sets the treasury address\\n     * @param _treasury The address of the treasury\\n     */\\n    function setTreasury(\\n        address _treasury\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(_treasury != address(0), \\\"!_treasury\\\");\\n        treasury = _treasury;\\n    }\\n\\n    /**\\n     * @notice Sets the treasury fee\\n     * @dev Throws if setting fee over 20%\\n     * @param _treasuryFee The value for the treasury fee\\n     */\\n    function setTreasuryFee(\\n        uint256 _treasuryFee\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(_treasuryFee <= 5000, \\\"_treasuryFee over 50%\\\");\\n        treasuryFee = _treasuryFee;\\n    }\\n\\n    /**\\n     * @notice Sets the withdrawal protection fee\\n     * @dev Throws if setting fee over 1%\\n     * @param _withdrawalProtectionFee The value for the withdrawal protection fee\\n     */\\n    function setWithdrawalProtectionFee(\\n        uint256 _withdrawalProtectionFee\\n    )\\n        external\\n        notHalted\\n        onlyGovernance\\n    {\\n        require(_withdrawalProtectionFee <= 100, \\\"_withdrawalProtectionFee over 1%\\\");\\n        withdrawalProtectionFee = _withdrawalProtectionFee;\\n    }\\n\\n    /**\\n     * STRATEGIST-ONLY FUNCTIONS\\n     */\\n\\n    /**\\n     * @notice Updates the strategist to the pending strategist\\n     * @dev This can only be called after the pending strategist timelock (7 days)\\n     */\\n    function acceptStrategist()\\n        external\\n        notHalted\\n    {\\n        require(msg.sender == pendingStrategist, \\\"!pendingStrategist\\\");\\n        // solhint-disable-next-line not-rely-on-time\\n        require(block.timestamp > setPendingStrategistTime.add(PENDING_STRATEGIST_TIMELOCK), \\\"PENDING_STRATEGIST_TIMELOCK\\\");\\n        delete pendingStrategist;\\n        delete setPendingStrategistTime;\\n        strategist = msg.sender;\\n        emit SetStrategist(msg.sender);\\n    }\\n\\n    /**\\n     * @notice Adds a token to be able to be deposited for a given vault\\n     * @param _vault The address of the vault\\n     */\\n    function addVault(\\n        address _vault\\n    )\\n        external\\n        override\\n        notHalted\\n        onlyStrategist\\n    {\\n        require(allowedVaults[_vault], \\\"!allowedVaults\\\");\\n        require(tokens[_vault] == address(0), \\\"!_vault\\\");\\n        address _token = IVault(_vault).getToken();\\n        tokens[_vault] = _token;\\n        emit VaultAdded(_vault, _token);\\n    }\\n\\n    /**\\n     * @notice Allows the strategist to pull tokens out of this contract\\n     * @dev This contract should never hold tokens\\n     * @param _token The address of the token\\n     * @param _amount The amount to withdraw\\n     * @param _to The address to send to\\n     */\\n    function recoverToken(\\n        IERC20 _token,\\n        uint256 _amount,\\n        address _to\\n    )\\n        external\\n        notHalted\\n        onlyStrategist\\n    {\\n        _token.safeTransfer(_to, _amount);\\n    }\\n\\n    /**\\n     * @notice Removes a token from being able to be deposited for a given vault\\n     * @param _vault The address of the vault\\n     */\\n    function removeVault(\\n        address _vault\\n    )\\n        external\\n        override\\n        notHalted\\n        onlyStrategist\\n    {\\n        require(tokens[_vault] != address(0), \\\"!_vault\\\");\\n        delete tokens[_vault];\\n        delete allowedVaults[_vault];\\n        emit VaultRemoved(_vault);\\n    }\\n\\n    /**\\n     * @notice Sets the vault address for a controller\\n     * @param _vault The address of the vault\\n     * @param _controller The address of the controller\\n     */\\n    function setController(\\n        address _vault,\\n        address _controller\\n    )\\n        external\\n        notHalted\\n        onlyStrategist\\n    {\\n        require(allowedVaults[_vault], \\\"!_vault\\\");\\n        require(allowedControllers[_controller], \\\"!_controller\\\");\\n        controllers[_vault] = _controller;\\n        emit SetController(_vault, _controller);\\n    }\\n\\n    /**\\n     * @notice Sets the protocol as halted, disallowing all deposits forever\\n     * @dev Withdraws will still work, allowing users to exit the protocol\\n     */\\n    function setHalted()\\n        external\\n        notHalted\\n        onlyStrategist\\n    {\\n        halted = true;\\n        emit Halted();\\n    }\\n\\n    /**\\n     * EXTERNAL VIEW FUNCTIONS\\n     */\\n\\n    /**\\n     * @notice Returns an array of token addresses for a given vault\\n     * @param _vault The address of the vault\\n     */\\n    function getToken(\\n        address _vault\\n    )\\n        external\\n        view\\n        override\\n        returns (address)\\n    {\\n        return tokens[_vault];\\n    }\\n\\n    /**\\n     * @notice Returns a tuple of:\\n     *     YAXIS token address,\\n     *     Treasury address,\\n     *     Treasury fee\\n     */\\n    function getHarvestFeeInfo()\\n        external\\n        view\\n        override\\n        returns (\\n            address,\\n            address,\\n            uint256\\n        )\\n    {\\n        return (\\n            yaxis,\\n            treasury,\\n            treasuryFee\\n        );\\n    }\\n\\n    modifier notHalted() {\\n        require(!halted, \\\"halted\\\");\\n        _;\\n    }\\n\\n    modifier onlyGovernance() {\\n        require(msg.sender == governance, \\\"!governance\\\");\\n        _;\\n    }\\n\\n    modifier onlyStrategist() {\\n        require(msg.sender == strategist, \\\"!strategist\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x4c1a8479757bf5adb1e44ebabf9f67489a88f68c6870fbf22811db68932e9559\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IManager.sol\\\";\\n\\ninterface IController {\\n    function balanceOf() external view returns (uint256);\\n    function converter(address _vault) external view returns (address);\\n    function earn(address _strategy, address _token, uint256 _amount) external;\\n    function investEnabled() external view returns (bool);\\n    function harvestStrategy(address _strategy, uint256[] calldata _estimates) external;\\n    function manager() external view returns (IManager);\\n    function strategies() external view returns (uint256);\\n    function withdraw(address _token, uint256 _amount) external;\\n    function withdrawAll(address _strategy, address _convert) external;\\n}\\n\",\"keccak256\":\"0x8ce01e149a62d561d025ba8671b7487d33090189d896dcfc0f5464870b85d38e\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IManager.sol\\\";\\n\\ninterface IConverter {\\n    function manager() external view returns (IManager);\\n    function convert(\\n        address _input,\\n        address _output,\\n        uint256 _inputAmount,\\n        uint256 _estimatedOutput\\n    ) external returns (uint256 _outputAmount);\\n    function expected(\\n        address _input,\\n        address _output,\\n        uint256 _inputAmount\\n    ) external view returns (uint256 _outputAmount);\\n}\\n\",\"keccak256\":\"0x6969eecc0d8f1497daf53f2641089dc3d36d7a057b959815b1b565e5b88b8d55\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IHarvester.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IManager.sol\\\";\\n\\ninterface IHarvester {\\n    function addStrategy(address, address, uint256) external;\\n    function manager() external view returns (IManager);\\n    function removeStrategy(address, address, uint256) external;\\n    function slippage() external view returns (uint256);\\n}\\n\\n\",\"keccak256\":\"0x2047997ad37599e5b472606ec5f1433b2086b3a7eec31c27bc88d1e9a27cd720\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IManager {\\n    function addVault(address) external;\\n    function allowedControllers(address) external view returns (bool);\\n    function allowedConverters(address) external view returns (bool);\\n    function allowedStrategies(address) external view returns (bool);\\n    function allowedVaults(address) external view returns (bool);\\n    function controllers(address) external view returns (address);\\n    function getHarvestFeeInfo() external view returns (address, address, uint256);\\n    function getToken(address) external view returns (address);\\n    function governance() external view returns (address);\\n    function halted() external view returns (bool);\\n    function harvester() external view returns (address);\\n    function insuranceFee() external view returns (uint256);\\n    function insurancePool() external view returns (address);\\n    function insurancePoolFee() external view returns (uint256);\\n    function pendingStrategist() external view returns (address);\\n    function removeVault(address) external;\\n    function stakingPool() external view returns (address);\\n    function stakingPoolShareFee() external view returns (uint256);\\n    function strategist() external view returns (address);\\n    function treasury() external view returns (address);\\n    function treasuryFee() external view returns (uint256);\\n    function withdrawalProtectionFee() external view returns (uint256);\\n    function yaxis() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7643ce13f4882cd5e4fef64c7e82ef6b7037af24afb88ca0e97922f93d52850d\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IManager.sol\\\";\\nimport \\\"./ISwap.sol\\\";\\n\\ninterface IStrategy {\\n    function balanceOf() external view returns (uint256);\\n    function balanceOfPool() external view returns (uint256);\\n    function balanceOfWant() external view returns (uint256);\\n    function deposit() external;\\n    function harvest(uint256[] calldata) external;\\n    function manager() external view returns (IManager);\\n    function name() external view returns (string memory);\\n    function router() external view returns (ISwap);\\n    function skim() external;\\n    function want() external view returns (address);\\n    function weth() external view returns (address);\\n    function withdraw(address) external;\\n    function withdraw(uint256) external;\\n    function withdrawAll() external;\\n}\\n\\ninterface IStrategyExtended {\\n    function getEstimates() external view returns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0xd1929e523830a082079cd819f46345ee5c28d79a1f271b2b0d58683194133938\",\"license\":\"MIT\"},\"contracts/v3/interfaces/ISwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.2;\\n\\ninterface ISwap {\\n    function swapExactTokensForTokens(uint256, uint256, address[] calldata, address, uint256) external;\\n    function getAmountsOut(uint256, address[] calldata) external view returns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0x054e1fbb6e5fc879fcd57c1fe554fe9838dbae742d35df59541c200e50fc6b59\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IManager.sol\\\";\\n\\ninterface IVault {\\n    function available() external view returns (uint256);\\n    function balance() external view returns (uint256);\\n    function deposit(uint256 _amount) external returns (uint256);\\n    function earn(address _strategy) external;\\n    function gauge() external returns (address);\\n    function getLPToken() external view returns (address);\\n    function getPricePerFullShare() external view returns (uint256);\\n    function getToken() external view returns (address);\\n    function manager() external view returns (IManager);\\n    function withdraw(uint256 _amount) external;\\n    function withdrawAll() external;\\n    function withdrawFee(uint256 _amount) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8f644406524022d13516dc130b4948962d0ed3d5fa2099b89041ddf54a96b002\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516126813803806126818339818101604052602081101561003357600080fd5b50516001600160a01b03811661007a576040805162461bcd60e51b8152602060048201526007602482015266215f796178697360c81b604482015290519081900360640190fd5b606081901b6001600160601b03191660805260008054610100600160a81b031916336101008102919091178255600480546001600160a01b03199081168317909155600180548216831790556006805490911690911790556107d06009556101f4600a908155600b556001600160a01b03909116906125769061010b903980610b86528061201452506125766000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c806396d4370611610151578063c7b9d530116100c3578063d2a3259f11610087578063d2a3259f14610666578063da633d3114610694578063da8c229e146106c6578063e8d76bce146106ec578063f0f4426014610712578063f47c84c51461073857610274565b8063c7b9d530146105bf578063cc08c4cc146105e5578063cc32d17614610602578063ceb68c231461060a578063d04323c51461063057610274565b8063b1c7d36f11610115578063b1c7d36f14610554578063b9b8af0b1461055c578063ba32681e14610564578063c3de0cc414610581578063c3f4538714610589578063c4c4f2ee1461059157610274565b806396d43706146104f057806397c4fac7146104f8578063a94c487e14610500578063ab033ea914610526578063ab2adc001461054c57610274565b8063603dfcda116101ea57806377e741c7116101ae57806377e741c7146104495780637ae6c8d4146104665780637b7d6c681461048c5780637d5c0155146104ba57806382513909146104c257806383649674146104ca57610274565b8063603dfcda1461039f57806361d027b3146103bc5780636aef220a146103c45780636b0243bc146103fe5780636bbdc24b1461041b57610274565b80633f021b0e1161023c5780633f021b0e1461031957806346821efa146103215780634bdaeac11461033b57806359770438146103435780635aa6e675146103695780635b301d4c1461037157610274565b80630c56ae3b1461027957806315de1daa1461029d5780631fe4a686146102c5578063256b5a02146102cd5780633028f63a146102f3575b600080fd5b610281610740565b604080516001600160a01b039092168252519081900360200190f35b6102c3600480360360208110156102b357600080fd5b50356001600160a01b031661074f565b005b6102816108b9565b6102c3600480360360208110156102e357600080fd5b50356001600160a01b03166108c8565b6102c36004803603602081101561030957600080fd5b50356001600160a01b0316610acf565b610281610b84565b610329610ba8565b60408051918252519081900360200190f35b610281610bae565b6102816004803603602081101561035957600080fd5b50356001600160a01b0316610bbd565b610281610bdb565b6102c36004803603604081101561038757600080fd5b506001600160a01b0381351690602001351515610bef565b6102c3600480360360208110156103b557600080fd5b5035610d97565b610281610e86565b6103ea600480360360208110156103da57600080fd5b50356001600160a01b0316610e95565b604080519115158252519081900360200190f35b6102c36004803603602081101561041457600080fd5b5035610eaa565b6102c36004803603604081101561043157600080fd5b506001600160a01b0381351690602001351515610f98565b6102c36004803603602081101561045f57600080fd5b5035611140565b6103ea6004803603602081101561047c57600080fd5b50356001600160a01b0316611227565b6102c3600480360360408110156104a257600080fd5b506001600160a01b038135811691602001351661123c565b6103296113d4565b6103296113db565b6103ea600480360360208110156104e057600080fd5b50356001600160a01b03166113e1565b6102c36113f6565b6103296114ba565b6102c36004803603602081101561051657600080fd5b50356001600160a01b03166114c0565b6102c36004803603602081101561053c57600080fd5b50356001600160a01b0316611575565b610281611658565b610329611667565b6103ea61166d565b6102c36004803603602081101561057a57600080fd5b5035611676565b61028161175c565b6102c361176b565b6102c3600480360360408110156105a757600080fd5b506001600160a01b03813516906020013515156118b1565b6102c3600480360360208110156105d557600080fd5b50356001600160a01b0316611a59565b6102c3600480360360208110156105fb57600080fd5b5035611b83565b610329611c72565b6102c36004803603602081101561062057600080fd5b50356001600160a01b0316611c78565b6102c36004803603606081101561064657600080fd5b506001600160a01b03813581169160208101359160409091013516611dbd565b6102c36004803603604081101561067c57600080fd5b506001600160a01b0381351690602001351515611e64565b61069c61200c565b604080516001600160a01b0394851681529290931660208301528183015290519081900360600190f35b610281600480360360208110156106dc57600080fd5b50356001600160a01b0316612041565b6103ea6004803603602081101561070257600080fd5b50356001600160a01b031661205c565b6102c36004803603602081101561072857600080fd5b50356001600160a01b0316612071565b61032961216e565b6003546001600160a01b031681565b60005460ff1615610790576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b031633146107e2576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b306001600160a01b0316816001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b15801561082557600080fd5b505afa158015610839573d6000803e3d6000fd5b505050506040513d602081101561084f57600080fd5b50516001600160a01b031614610897576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b60005460ff1615610909576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6004546001600160a01b03163314610956576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b03811660009081526010602052604090205460ff166109b4576040805162461bcd60e51b815260206004820152600e60248201526d21616c6c6f7765645661756c747360901b604482015290519081900360640190fd5b6001600160a01b038181166000908152601260205260409020541615610a0b576040805162461bcd60e51b81526020600482015260076024820152660857dd985d5b1d60ca1b604482015290519081900360640190fd5b6000816001600160a01b03166321df0da76040518163ffffffff1660e01b815260040160206040518083038186803b158015610a4657600080fd5b505afa158015610a5a573d6000803e3d6000fd5b505050506040513d6020811015610a7057600080fd5b50516001600160a01b0383811660008181526012602052604080822080546001600160a01b031916948616948517905551939450919290917f2f0697414292d16e25e419060ebbb3a3318648280380829ca42af307b155393b91a35050565b60005460ff1615610b10576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314610b62576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b60085481565b6001546001600160a01b031681565b6001600160a01b039081166000908152601260205260409020541690565b60005461010090046001600160a01b031681565b60005460ff1615610c30576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314610c82576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b306001600160a01b0316826001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc557600080fd5b505afa158015610cd9573d6000803e3d6000fd5b505050506040513d6020811015610cef57600080fd5b50516001600160a01b031614610d37576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b6001600160a01b0382166000818152600e6020908152604091829020805460ff1916851515908117909155825190815291517f1da9d4667c5bcfd6db52e9fa66b3bf5e3a0bb5cd3e198216853056d08a84a25e9281900390910190a25050565b60005460ff1615610dd8576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314610e2a576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b611388811115610e81576040805162461bcd60e51b815260206004820152601d60248201527f5f7374616b696e67506f6f6c5368617265466565206f76657220353025000000604482015290519081900360640190fd5b600955565b6006546001600160a01b031681565b600d6020526000908152604090205460ff1681565b60005460ff1615610eeb576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314610f3d576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6064811115610f93576040805162461bcd60e51b815260206004820181905260248201527f5f7769746864726177616c50726f74656374696f6e466565206f766572203125604482015290519081900360640190fd5b600b55565b60005460ff1615610fd9576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b0316331461102b576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b306001600160a01b0316826001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b15801561106e57600080fd5b505afa158015611082573d6000803e3d6000fd5b505050506040513d602081101561109857600080fd5b50516001600160a01b0316146110e0576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b6001600160a01b038216600081815260106020908152604091829020805460ff1916851515908117909155825190815291517f782feb3c2ff233492ea8302a5109cb6f33fcdedaf15f4d4a7e847f3ec06c53829281900390910190a25050565b60005460ff1615611181576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b031633146111d3576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b611388811115611222576040805162461bcd60e51b81526020600482015260156024820152745f7472656173757279466565206f7665722035302560581b604482015290519081900360640190fd5b600a55565b600f6020526000908152604090205460ff1681565b60005460ff161561127d576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6004546001600160a01b031633146112ca576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b03821660009081526010602052604090205460ff16611321576040805162461bcd60e51b81526020600482015260076024820152660857dd985d5b1d60ca1b604482015290519081900360640190fd5b6001600160a01b0381166000908152600d602052604090205460ff1661137d576040805162461bcd60e51b815260206004820152600c60248201526b10afb1b7b73a3937b63632b960a11b604482015290519081900360640190fd5b6001600160a01b0382811660008181526011602052604080822080546001600160a01b0319169486169485179055517f9fdb07212c6f92fd298affc4000712177664bc3c4cae5f61098d42da6d05be1e9190a35050565b62093a8081565b600b5481565b600e6020526000908152604090205460ff1681565b60005460ff1615611437576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6004546001600160a01b03163314611484576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6000805460ff191660011781556040517f1ee9080f6b55ca44ce58681c8162e6c1ac1c47e1da791a4a1c1ec6186d8af1f39190a1565b60075481565b60005460ff1615611501576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611553576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60005460ff16156115b6576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611608576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b60008054610100600160a81b0319166101006001600160a01b03841690810291909117825560405190917f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621991a250565b6002546001600160a01b031681565b60095481565b60005460ff1681565b60005460ff16156116b7576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611709576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6064811115611757576040805162461bcd60e51b81526020600482015260156024820152745f696e737572616e6365466565206f76657220312560581b604482015290519081900360640190fd5b600755565b6005546001600160a01b031681565b60005460ff16156117ac576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6005546001600160a01b03163314611800576040805162461bcd60e51b8152602060048201526012602482015271085c195b991a5b99d4dd1c985d1959da5cdd60721b604482015290519081900360640190fd5b600c546118109062093a80612174565b4211611863576040805162461bcd60e51b815260206004820152601b60248201527f50454e44494e475f535452415445474953545f54494d454c4f434b0000000000604482015290519081900360640190fd5b600580546001600160a01b03199081169091556000600c81905560048054339316831790556040517f46d58e3fa07bf19b1d27240f0e286b27e9f7c1b0d88933333fe833b60eec54129190a2565b60005460ff16156118f2576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611944576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b306001600160a01b0316826001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b15801561198757600080fd5b505afa15801561199b573d6000803e3d6000fd5b505050506040513d60208110156119b157600080fd5b50516001600160a01b0316146119f9576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b6001600160a01b0382166000818152600f6020908152604091829020805460ff1916851515908117909155825190815291517f7dc60e546dd3412c6abd1e15894f1e79359a5d19a26dff0554649831f8ebfc499281900390910190a25050565b60005460ff1615611a9a576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611aec576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6001600160a01b038116611b36576040805162461bcd60e51b815260206004820152600c60248201526b0857dcdd1c985d1959da5cdd60a21b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b03831690811790915542600c556040517e82dcc415a21035ab1e9de07c5fb8f8e351e148774f21288b1f1ad81992b0a690600090a250565b60005460ff1615611bc4576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611c16576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6107d0811115611c6d576040805162461bcd60e51b815260206004820152601a60248201527f5f696e737572616e6365506f6f6c466565206f76657220323025000000000000604482015290519081900360640190fd5b600855565b600a5481565b60005460ff1615611cb9576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6004546001600160a01b03163314611d06576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b0381811660009081526012602052604090205416611d5c576040805162461bcd60e51b81526020600482015260076024820152660857dd985d5b1d60ca1b604482015290519081900360640190fd5b6001600160a01b038116600081815260126020908152604080832080546001600160a01b03191690556010909152808220805460ff19169055517fe71f3a50e5ad81964f352c411f1d45e35438ecd1acecef59ac81d9fbbf6cbc0a9190a250565b60005460ff1615611dfe576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6004546001600160a01b03163314611e4b576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b611e5f6001600160a01b03841682846121d5565b505050565b60005460ff1615611ea5576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611ef7576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b306001600160a01b0316826001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b158015611f3a57600080fd5b505afa158015611f4e573d6000803e3d6000fd5b505050506040513d6020811015611f6457600080fd5b50516001600160a01b031614611fac576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b6001600160a01b0382166000818152600d6020908152604091829020805460ff1916851515908117909155825190815291517f301f7fe22cf850fe662189cc6dca0701b83a64a254b04eb21a3c1ef4118dd3eb9281900390910190a25050565b600654600a547f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b03169192565b6011602052600090815260409020546001600160a01b031681565b60106020526000908152604090205460ff1681565b60005460ff16156120b2576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314612104576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6001600160a01b03811661214c576040805162461bcd60e51b815260206004820152600a602482015269215f747265617375727960b01b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61010081565b6000828201838110156121ce576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611e5f9084906060612277826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166122d39092919063ffffffff16565b805190915015611e5f5780806020019051602081101561229657600080fd5b5051611e5f5760405162461bcd60e51b815260040180806020018281038252602a815260200180612517602a913960400191505060405180910390fd5b60606122e284846000856122ea565b949350505050565b60608247101561232b5760405162461bcd60e51b81526004018080602001828103825260268152602001806124f16026913960400191505060405180910390fd5b61233485612446565b612385576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106123c45780518252601f1990920191602091820191016123a5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612426576040519150601f19603f3d011682016040523d82523d6000602084013e61242b565b606091505b509150915061243b82828661244c565b979650505050505050565b3b151590565b6060831561245b5750816121ce565b82511561246b5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156124b557818101518382015260200161249d565b50505050905090810190601f1680156124e25780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212201c705e231d3197cdc40b0261590c28f591d450f4823e83dd035467a659b197ac64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102745760003560e01c806396d4370611610151578063c7b9d530116100c3578063d2a3259f11610087578063d2a3259f14610666578063da633d3114610694578063da8c229e146106c6578063e8d76bce146106ec578063f0f4426014610712578063f47c84c51461073857610274565b8063c7b9d530146105bf578063cc08c4cc146105e5578063cc32d17614610602578063ceb68c231461060a578063d04323c51461063057610274565b8063b1c7d36f11610115578063b1c7d36f14610554578063b9b8af0b1461055c578063ba32681e14610564578063c3de0cc414610581578063c3f4538714610589578063c4c4f2ee1461059157610274565b806396d43706146104f057806397c4fac7146104f8578063a94c487e14610500578063ab033ea914610526578063ab2adc001461054c57610274565b8063603dfcda116101ea57806377e741c7116101ae57806377e741c7146104495780637ae6c8d4146104665780637b7d6c681461048c5780637d5c0155146104ba57806382513909146104c257806383649674146104ca57610274565b8063603dfcda1461039f57806361d027b3146103bc5780636aef220a146103c45780636b0243bc146103fe5780636bbdc24b1461041b57610274565b80633f021b0e1161023c5780633f021b0e1461031957806346821efa146103215780634bdaeac11461033b57806359770438146103435780635aa6e675146103695780635b301d4c1461037157610274565b80630c56ae3b1461027957806315de1daa1461029d5780631fe4a686146102c5578063256b5a02146102cd5780633028f63a146102f3575b600080fd5b610281610740565b604080516001600160a01b039092168252519081900360200190f35b6102c3600480360360208110156102b357600080fd5b50356001600160a01b031661074f565b005b6102816108b9565b6102c3600480360360208110156102e357600080fd5b50356001600160a01b03166108c8565b6102c36004803603602081101561030957600080fd5b50356001600160a01b0316610acf565b610281610b84565b610329610ba8565b60408051918252519081900360200190f35b610281610bae565b6102816004803603602081101561035957600080fd5b50356001600160a01b0316610bbd565b610281610bdb565b6102c36004803603604081101561038757600080fd5b506001600160a01b0381351690602001351515610bef565b6102c3600480360360208110156103b557600080fd5b5035610d97565b610281610e86565b6103ea600480360360208110156103da57600080fd5b50356001600160a01b0316610e95565b604080519115158252519081900360200190f35b6102c36004803603602081101561041457600080fd5b5035610eaa565b6102c36004803603604081101561043157600080fd5b506001600160a01b0381351690602001351515610f98565b6102c36004803603602081101561045f57600080fd5b5035611140565b6103ea6004803603602081101561047c57600080fd5b50356001600160a01b0316611227565b6102c3600480360360408110156104a257600080fd5b506001600160a01b038135811691602001351661123c565b6103296113d4565b6103296113db565b6103ea600480360360208110156104e057600080fd5b50356001600160a01b03166113e1565b6102c36113f6565b6103296114ba565b6102c36004803603602081101561051657600080fd5b50356001600160a01b03166114c0565b6102c36004803603602081101561053c57600080fd5b50356001600160a01b0316611575565b610281611658565b610329611667565b6103ea61166d565b6102c36004803603602081101561057a57600080fd5b5035611676565b61028161175c565b6102c361176b565b6102c3600480360360408110156105a757600080fd5b506001600160a01b03813516906020013515156118b1565b6102c3600480360360208110156105d557600080fd5b50356001600160a01b0316611a59565b6102c3600480360360208110156105fb57600080fd5b5035611b83565b610329611c72565b6102c36004803603602081101561062057600080fd5b50356001600160a01b0316611c78565b6102c36004803603606081101561064657600080fd5b506001600160a01b03813581169160208101359160409091013516611dbd565b6102c36004803603604081101561067c57600080fd5b506001600160a01b0381351690602001351515611e64565b61069c61200c565b604080516001600160a01b0394851681529290931660208301528183015290519081900360600190f35b610281600480360360208110156106dc57600080fd5b50356001600160a01b0316612041565b6103ea6004803603602081101561070257600080fd5b50356001600160a01b031661205c565b6102c36004803603602081101561072857600080fd5b50356001600160a01b0316612071565b61032961216e565b6003546001600160a01b031681565b60005460ff1615610790576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b031633146107e2576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b306001600160a01b0316816001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b15801561082557600080fd5b505afa158015610839573d6000803e3d6000fd5b505050506040513d602081101561084f57600080fd5b50516001600160a01b031614610897576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b60005460ff1615610909576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6004546001600160a01b03163314610956576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b03811660009081526010602052604090205460ff166109b4576040805162461bcd60e51b815260206004820152600e60248201526d21616c6c6f7765645661756c747360901b604482015290519081900360640190fd5b6001600160a01b038181166000908152601260205260409020541615610a0b576040805162461bcd60e51b81526020600482015260076024820152660857dd985d5b1d60ca1b604482015290519081900360640190fd5b6000816001600160a01b03166321df0da76040518163ffffffff1660e01b815260040160206040518083038186803b158015610a4657600080fd5b505afa158015610a5a573d6000803e3d6000fd5b505050506040513d6020811015610a7057600080fd5b50516001600160a01b0383811660008181526012602052604080822080546001600160a01b031916948616948517905551939450919290917f2f0697414292d16e25e419060ebbb3a3318648280380829ca42af307b155393b91a35050565b60005460ff1615610b10576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314610b62576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b60085481565b6001546001600160a01b031681565b6001600160a01b039081166000908152601260205260409020541690565b60005461010090046001600160a01b031681565b60005460ff1615610c30576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314610c82576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b306001600160a01b0316826001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc557600080fd5b505afa158015610cd9573d6000803e3d6000fd5b505050506040513d6020811015610cef57600080fd5b50516001600160a01b031614610d37576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b6001600160a01b0382166000818152600e6020908152604091829020805460ff1916851515908117909155825190815291517f1da9d4667c5bcfd6db52e9fa66b3bf5e3a0bb5cd3e198216853056d08a84a25e9281900390910190a25050565b60005460ff1615610dd8576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314610e2a576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b611388811115610e81576040805162461bcd60e51b815260206004820152601d60248201527f5f7374616b696e67506f6f6c5368617265466565206f76657220353025000000604482015290519081900360640190fd5b600955565b6006546001600160a01b031681565b600d6020526000908152604090205460ff1681565b60005460ff1615610eeb576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314610f3d576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6064811115610f93576040805162461bcd60e51b815260206004820181905260248201527f5f7769746864726177616c50726f74656374696f6e466565206f766572203125604482015290519081900360640190fd5b600b55565b60005460ff1615610fd9576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b0316331461102b576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b306001600160a01b0316826001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b15801561106e57600080fd5b505afa158015611082573d6000803e3d6000fd5b505050506040513d602081101561109857600080fd5b50516001600160a01b0316146110e0576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b6001600160a01b038216600081815260106020908152604091829020805460ff1916851515908117909155825190815291517f782feb3c2ff233492ea8302a5109cb6f33fcdedaf15f4d4a7e847f3ec06c53829281900390910190a25050565b60005460ff1615611181576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b031633146111d3576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b611388811115611222576040805162461bcd60e51b81526020600482015260156024820152745f7472656173757279466565206f7665722035302560581b604482015290519081900360640190fd5b600a55565b600f6020526000908152604090205460ff1681565b60005460ff161561127d576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6004546001600160a01b031633146112ca576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b03821660009081526010602052604090205460ff16611321576040805162461bcd60e51b81526020600482015260076024820152660857dd985d5b1d60ca1b604482015290519081900360640190fd5b6001600160a01b0381166000908152600d602052604090205460ff1661137d576040805162461bcd60e51b815260206004820152600c60248201526b10afb1b7b73a3937b63632b960a11b604482015290519081900360640190fd5b6001600160a01b0382811660008181526011602052604080822080546001600160a01b0319169486169485179055517f9fdb07212c6f92fd298affc4000712177664bc3c4cae5f61098d42da6d05be1e9190a35050565b62093a8081565b600b5481565b600e6020526000908152604090205460ff1681565b60005460ff1615611437576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6004546001600160a01b03163314611484576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6000805460ff191660011781556040517f1ee9080f6b55ca44ce58681c8162e6c1ac1c47e1da791a4a1c1ec6186d8af1f39190a1565b60075481565b60005460ff1615611501576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611553576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60005460ff16156115b6576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611608576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b60008054610100600160a81b0319166101006001600160a01b03841690810291909117825560405190917f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621991a250565b6002546001600160a01b031681565b60095481565b60005460ff1681565b60005460ff16156116b7576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611709576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6064811115611757576040805162461bcd60e51b81526020600482015260156024820152745f696e737572616e6365466565206f76657220312560581b604482015290519081900360640190fd5b600755565b6005546001600160a01b031681565b60005460ff16156117ac576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6005546001600160a01b03163314611800576040805162461bcd60e51b8152602060048201526012602482015271085c195b991a5b99d4dd1c985d1959da5cdd60721b604482015290519081900360640190fd5b600c546118109062093a80612174565b4211611863576040805162461bcd60e51b815260206004820152601b60248201527f50454e44494e475f535452415445474953545f54494d454c4f434b0000000000604482015290519081900360640190fd5b600580546001600160a01b03199081169091556000600c81905560048054339316831790556040517f46d58e3fa07bf19b1d27240f0e286b27e9f7c1b0d88933333fe833b60eec54129190a2565b60005460ff16156118f2576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611944576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b306001600160a01b0316826001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b15801561198757600080fd5b505afa15801561199b573d6000803e3d6000fd5b505050506040513d60208110156119b157600080fd5b50516001600160a01b0316146119f9576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b6001600160a01b0382166000818152600f6020908152604091829020805460ff1916851515908117909155825190815291517f7dc60e546dd3412c6abd1e15894f1e79359a5d19a26dff0554649831f8ebfc499281900390910190a25050565b60005460ff1615611a9a576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611aec576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6001600160a01b038116611b36576040805162461bcd60e51b815260206004820152600c60248201526b0857dcdd1c985d1959da5cdd60a21b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b03831690811790915542600c556040517e82dcc415a21035ab1e9de07c5fb8f8e351e148774f21288b1f1ad81992b0a690600090a250565b60005460ff1615611bc4576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611c16576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6107d0811115611c6d576040805162461bcd60e51b815260206004820152601a60248201527f5f696e737572616e6365506f6f6c466565206f76657220323025000000000000604482015290519081900360640190fd5b600855565b600a5481565b60005460ff1615611cb9576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6004546001600160a01b03163314611d06576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b0381811660009081526012602052604090205416611d5c576040805162461bcd60e51b81526020600482015260076024820152660857dd985d5b1d60ca1b604482015290519081900360640190fd5b6001600160a01b038116600081815260126020908152604080832080546001600160a01b03191690556010909152808220805460ff19169055517fe71f3a50e5ad81964f352c411f1d45e35438ecd1acecef59ac81d9fbbf6cbc0a9190a250565b60005460ff1615611dfe576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b6004546001600160a01b03163314611e4b576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b611e5f6001600160a01b03841682846121d5565b505050565b60005460ff1615611ea5576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314611ef7576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b306001600160a01b0316826001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b158015611f3a57600080fd5b505afa158015611f4e573d6000803e3d6000fd5b505050506040513d6020811015611f6457600080fd5b50516001600160a01b031614611fac576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b6001600160a01b0382166000818152600d6020908152604091829020805460ff1916851515908117909155825190815291517f301f7fe22cf850fe662189cc6dca0701b83a64a254b04eb21a3c1ef4118dd3eb9281900390910190a25050565b600654600a547f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b03169192565b6011602052600090815260409020546001600160a01b031681565b60106020526000908152604090205460ff1681565b60005460ff16156120b2576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60005461010090046001600160a01b03163314612104576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6001600160a01b03811661214c576040805162461bcd60e51b815260206004820152600a602482015269215f747265617375727960b01b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61010081565b6000828201838110156121ce576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611e5f9084906060612277826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166122d39092919063ffffffff16565b805190915015611e5f5780806020019051602081101561229657600080fd5b5051611e5f5760405162461bcd60e51b815260040180806020018281038252602a815260200180612517602a913960400191505060405180910390fd5b60606122e284846000856122ea565b949350505050565b60608247101561232b5760405162461bcd60e51b81526004018080602001828103825260268152602001806124f16026913960400191505060405180910390fd5b61233485612446565b612385576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106123c45780518252601f1990920191602091820191016123a5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612426576040519150601f19603f3d011682016040523d82523d6000602084013e61242b565b606091505b509150915061243b82828661244c565b979650505050505050565b3b151590565b6060831561245b5750816121ce565b82511561246b5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156124b557818101518382015260200161249d565b50505050905090810190601f1680156124e25780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212201c705e231d3197cdc40b0261590c28f591d450f4823e83dd035467a659b197ac64736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptStrategist()": {
        "details": "This can only be called after the pending strategist timelock (7 days)"
      },
      "addVault(address)": {
        "params": {
          "_vault": "The address of the vault"
        }
      },
      "constructor": {
        "params": {
          "_yaxis": "The address of the YAX token"
        }
      },
      "getToken(address)": {
        "params": {
          "_vault": "The address of the vault"
        }
      },
      "recoverToken(address,uint256,address)": {
        "details": "This contract should never hold tokens",
        "params": {
          "_amount": "The amount to withdraw",
          "_to": "The address to send to",
          "_token": "The address of the token"
        }
      },
      "removeVault(address)": {
        "params": {
          "_vault": "The address of the vault"
        }
      },
      "setAllowedController(address,bool)": {
        "params": {
          "_allowed": "The status of if it is allowed",
          "_controller": "The address of the controller"
        }
      },
      "setAllowedConverter(address,bool)": {
        "params": {
          "_allowed": "The status of if it is allowed",
          "_converter": "The address of the converter"
        }
      },
      "setAllowedStrategy(address,bool)": {
        "params": {
          "_allowed": "The status of if it is allowed",
          "_strategy": "The address of the strategy"
        }
      },
      "setAllowedVault(address,bool)": {
        "params": {
          "_allowed": "The status of if it is allowed",
          "_vault": "The address of the vault"
        }
      },
      "setController(address,address)": {
        "params": {
          "_controller": "The address of the controller",
          "_vault": "The address of the vault"
        }
      },
      "setGovernance(address)": {
        "params": {
          "_governance": "The address of the governance"
        }
      },
      "setHalted()": {
        "details": "Withdraws will still work, allowing users to exit the protocol"
      },
      "setHarvester(address)": {
        "params": {
          "_harvester": "The address of the harvester"
        }
      },
      "setInsuranceFee(uint256)": {
        "details": "Throws if setting fee over 1%",
        "params": {
          "_insuranceFee": "The value for the insurance fee"
        }
      },
      "setInsurancePool(address)": {
        "params": {
          "_insurancePool": "The address of the insurance pool"
        }
      },
      "setInsurancePoolFee(uint256)": {
        "details": "Throws if setting fee over 20%",
        "params": {
          "_insurancePoolFee": "The value for the insurance pool fee"
        }
      },
      "setStakingPool(address)": {
        "params": {
          "_stakingPool": "The address of the staking pool"
        }
      },
      "setStakingPoolShareFee(uint256)": {
        "details": "Throws if setting fee over 50%",
        "params": {
          "_stakingPoolShareFee": "The value for the staking pool fee"
        }
      },
      "setStrategist(address)": {
        "params": {
          "_strategist": "The address of the strategist"
        }
      },
      "setTreasury(address)": {
        "params": {
          "_treasury": "The address of the treasury"
        }
      },
      "setTreasuryFee(uint256)": {
        "details": "Throws if setting fee over 20%",
        "params": {
          "_treasuryFee": "The value for the treasury fee"
        }
      },
      "setWithdrawalProtectionFee(uint256)": {
        "details": "Throws if setting fee over 1%",
        "params": {
          "_withdrawalProtectionFee": "The value for the withdrawal protection fee"
        }
      }
    },
    "title": "Manager",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptStrategist()": {
        "notice": "Updates the strategist to the pending strategist"
      },
      "addVault(address)": {
        "notice": "Adds a token to be able to be deposited for a given vault"
      },
      "getHarvestFeeInfo()": {
        "notice": "Returns a tuple of:     YAXIS token address,     Treasury address,     Treasury fee"
      },
      "getToken(address)": {
        "notice": "Returns an array of token addresses for a given vault"
      },
      "recoverToken(address,uint256,address)": {
        "notice": "Allows the strategist to pull tokens out of this contract"
      },
      "removeVault(address)": {
        "notice": "Removes a token from being able to be deposited for a given vault"
      },
      "setAllowedController(address,bool)": {
        "notice": "Sets the permission for the given controller"
      },
      "setAllowedConverter(address,bool)": {
        "notice": "Sets the permission for the given converter"
      },
      "setAllowedStrategy(address,bool)": {
        "notice": "Sets the permission for the given strategy"
      },
      "setAllowedVault(address,bool)": {
        "notice": "Sets the permission for the given vault"
      },
      "setController(address,address)": {
        "notice": "Sets the vault address for a controller"
      },
      "setGovernance(address)": {
        "notice": "Sets the governance address"
      },
      "setHalted()": {
        "notice": "Sets the protocol as halted, disallowing all deposits forever"
      },
      "setHarvester(address)": {
        "notice": "Sets the harvester address"
      },
      "setInsuranceFee(uint256)": {
        "notice": "Sets the insurance fee"
      },
      "setInsurancePool(address)": {
        "notice": "Sets the insurance pool address"
      },
      "setInsurancePoolFee(uint256)": {
        "notice": "Sets the insurance pool fee"
      },
      "setStakingPool(address)": {
        "notice": "Sets the staking pool address"
      },
      "setStakingPoolShareFee(uint256)": {
        "notice": "Sets the staking pool share fee"
      },
      "setStrategist(address)": {
        "notice": "Sets the pending strategist and the timestamp"
      },
      "setTreasury(address)": {
        "notice": "Sets the treasury address"
      },
      "setTreasuryFee(uint256)": {
        "notice": "Sets the treasury fee"
      },
      "setWithdrawalProtectionFee(uint256)": {
        "notice": "Sets the withdrawal protection fee"
      }
    },
    "notice": "This contract serves as the central point for governance-voted variables. Fees and permissioned addresses are stored and referenced in this contract only.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2765,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "halted",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2768,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "governance",
        "offset": 1,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2771,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "harvester",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2774,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "insurancePool",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2777,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "stakingPool",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 2780,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "strategist",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 2783,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "pendingStrategist",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 2786,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "treasury",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 2789,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "insuranceFee",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 2792,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "insurancePoolFee",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 2795,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "stakingPoolShareFee",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 2798,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "treasuryFee",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 2801,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "withdrawalProtectionFee",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 2803,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "setPendingStrategistTime",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 2808,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "allowedControllers",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2813,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "allowedConverters",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2818,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "allowedStrategies",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2823,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "allowedVaults",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2828,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "controllers",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2832,
        "contract": "contracts/v3/Manager.sol:Manager",
        "label": "tokens",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}